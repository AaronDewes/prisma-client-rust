pub mod types;
use request_handlers::dmmf::{schema::DmmfSchema};
pub use types::*;
pub mod codegen;

use std::fs;
use std::fs::File;
use std::io::Write as IoWrite;
use std::path::Path;
use std::process::Command;

pub struct GeneratorArgs {
    pub dml: datamodel::dml::Datamodel,
    pub schema: DmmfSchema,
    pub output: String,
    pub client_module_prefix: String,
}

pub fn run(args: GeneratorArgs) {
    let output = &args.output;

    let output_file_path = Path::new(output);

    if let Some(parent) = output_file_path.parent() {
        fs::create_dir_all(parent).unwrap();
    }

    let mut file = File::create(&output_file_path).expect("Failed to open file for codegen");

    file.write(b"// Code generated by gql-rs Plugin Prisma. DO NOT EDIT.\n\n")
        .unwrap();

    let client = codegen::generate_prisma_client(&args);

    file.write(client.as_bytes()).unwrap();

    Command::new("rustfmt")
        .arg("--edition=2021")
        .arg(output)
        .output()
        .unwrap();
}
